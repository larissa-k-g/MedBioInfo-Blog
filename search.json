[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "My name is Larissa and I am a PhD student at Stockholm University. As part of Prof. Eva Hedlunds research team I concentrate on understanding the motorneuron disease ALS. Most of you probably know it from the “Ice-bucket-challenge” or from the famous physicist Stephen Hawking. On this blog you can follow along if you want to get to know more abut ongoing research in ALS and neuroscience in general. You will also get to see my first attemps to manage different bioinformatic techniques."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Applied-Bioinfo-Blog",
    "section": "",
    "text": "Work environments and Containerss\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nOct 7, 2025\n\n\nLarissa Kahnwald\n\n\n\n\n\n\n\n\n\n\n\n\nGetting started with a Quarto Blog\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nOct 6, 2025\n\n\nLarissa Kahnwald\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\nnews\n\ncode\n\nanalysis\n\n\n\n\n\n\n\n\n\nOct 5, 2025\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nOct 3, 2025\n\n\nTristan O’Malley\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/pixi-qualitycontrol/index.html",
    "href": "posts/pixi-qualitycontrol/index.html",
    "title": "Work environments and Containerss",
    "section": "",
    "text": "Pixi\n\n\nIn science reproducibility and accessibility are two key factors. This does not only apply during the data collection phase of a project but particularly also during its analyisis. To ensure that the same script runs the same way anywhere else we can use environments and containers. That sounds great, but does that mean? Environments are like isolated spaces where you can install all the tools and packages that you need for a specific analysis. It’s basically like a lab bench that you set up with everything you need, chemicals, pipettes etc. for a specific experiment. Environment managers, such as Pixi, make it possible to have multiple different set ups right next to eachother, without one spilling over to the other one and even support you in finding the tools that you want. Containers on the other hand are like a bench on wheels. They contain everything tools, chemicals, hoods, chairs, the bench itself the protocol etc. They are easily shareable and the next person can just open them and run the analysis on their dataset again.\n\nTo start, install pixie run this in your command line:\n$curl -fsSL https://pixi.sh/install.sh | sh\nCreate a new project directory\nAdd conda-forge and bioconda channels using -c flag:\n$pixi init folder_name -c conda-forge -c bioconda\n\n\n-&gt; Channels will give Pixi a source from were to install the dependencies. It’s like telling Pixi which shop to go to to buy all the tools you need.\n\nIn your new folder you can now find a file - pixi.toml\n\n-&gt; .toml contains all the important information about your environment. It tells you the channels you have added, the name you have given the environment, which operating system, in which version it has been optimized for. Here we can also define different tasks and a list of all the tools/dependencies that have been installed in this environment, after they have been added.\n\nTo add a new tool/dependency you need to be in the project’s folder. Then you can simply use the command:\n$pixi add Quarto\ne.g. to add Quarto &lt;p style=\"margin-left:2em;\"&gt; -&gt; to see if it was installed properly you can either test it with the command$pixi run quarto –helpor go back to the .toml file and find that Quarto has been added as a dependency.&lt;/p&gt;\n\nNo that you have added a tool, yet another file has been added to your project folder: pixi.lock.\n&lt;p style=\"margin-left:2em;\"&gt; -&gt; .lock tracks everything pixi actually did to install your tool, the channels, where the packages were downloaded from, licences etc. &lt;/p&gt; !OBS: DON’T EVER DELETE .toml OR .lock. THIS WILL CAUSE YOUR ENVIRONMENT TO BREAK!\nTo use your tool you can use:\n$pixi run quarto --help\" **Pro-Tip:** You can also enter the environment using\\(pixi shell`. This allows you to forget about pixi and just run your commands as \"normally\" e.g. `\\)quarto –help. To leave it again, just type exit into the commandline and press enter."
  },
  {
    "objectID": "posts/getting-started-with-quarto-blogs/index.html",
    "href": "posts/getting-started-with-quarto-blogs/index.html",
    "title": "Getting started with a Quarto Blog",
    "section": "",
    "text": "Getting started\n\n\nFirst, create a new folder for a new blog entry. Then create an index.qmd file within that folder. This is going to be where you insert your blog entery. You can add title, author, date and assign a category. There are more options howe Second, add your text and adjust the title etc. In short: make your entry. To check inbetween you can click the preview/rendering button next to the file name or press shift + command + K to get a preview of the updates you made in the webview.\n!Pro Tip: To make paragraphs end the line with two spaces.\n\nFor an indentation try &lt;p style=\"margin-left:2em;\"&gt; Your indented text &lt;/p&gt;\n\n\nTo actually safe and publish go into the Terminal again and\n$git add --all\n$git commit -m \"Remember to leave a little comment of what the changes that you made were\"\n$git push origin main\nIn case of this error: “Updates were rejected because the remote contains work that you do hint: not have locally. This is usually caused by another repository pushing” try:\n$git pull origin main This should merge the remote updates with your local copy, then try push again.\n$git push origin main.\nAnd there you go - Your first Quarto Blog Entry!"
  }
]